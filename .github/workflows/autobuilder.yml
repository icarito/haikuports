name: Build HaikuPorts packages

on:
  workflow_dispatch:
  push:
    branches: [ main, master, development ] # Adjust as per your repository's default branches
  pull_request:
    branches: [ main, master, development ] # Adjust as per your repository's default branches

jobs:
  prepare-build:
    runs-on: ubuntu-latest
    outputs:
      changed_recipes_json: ${{ steps.detect-changes.outputs.changed_recipes_json }}
      has_changed_recipes: ${{ steps.detect-changes.outputs.has_changed_recipes }}
    steps:
      - name: Checkout HaikuPorts repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Set up Python for HaikuPorter
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install HaikuPorter
        run: |
          git clone https://github.com/haikuports/haikuporter.git ~/haikuporter
          sudo ln -s "$HOME/haikuporter/haikuporter" /usr/local/bin/haikuporter
          echo "HaikuPorter installed. Version:"
          haikuporter --version
        shell: bash

      - name: Set up HaikuPorter configuration
        run: |
          echo "TREE_PATH=\"${{ github.workspace }}\"" > "${{ github.workspace }}/haikuports.conf"
          echo "PACKAGER=\"CI Builder <ci@example.com>\"" >> "${{ github.workspace }}/haikuports.conf"
          echo "TARGET_ARCHITECTURE=\"x86_64\"" >> "${{ github.workspace }}/haikuports.conf"
          echo "HaikuPorter configuration created at ${{ github.workspace }}/haikuports.conf:"
          cat "${{ github.workspace }}/haikuports.conf"
        shell: bash

      - name: Download Haiku Licenses
        run: |
          wget https://github.com/waddlesplash/haiku-licenses/archive/master.zip -O haiku-licenses.zip
          unzip -q haiku-licenses.zip
          echo "Haiku Licenses downloaded and unzipped. Found directories:"
          ls -d ${{ github.workspace }}/haiku-licenses-*/ # Verify directory name relative to workspace
        shell: bash

      - name: Detect modified recipes
        id: detect-changes
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          GIT_PRIMARY_BRANCH_REF=""
          if git rev-parse --verify origin/main >/dev/null 2>&1; then
            GIT_PRIMARY_BRANCH_REF="origin/main"
          elif git rev-parse --verify origin/master >/dev/null 2>&1; then
            GIT_PRIMARY_BRANCH_REF="origin/master"
          fi

          if [ -z "$GIT_PRIMARY_BRANCH_REF" ]; then
            echo "::warning::No main or master branch found at origin to compare against. Assuming all recipes need checking."
            CHANGED_RECIPES=$(find . -name '*.recipe' -printf '%h\n' | sed 's|^\./||' | sort -u)
            echo "build_all_flag=true" >> $GITHUB_OUTPUT 
          else
            echo "Primary branch for comparison: $GIT_PRIMARY_BRANCH_REF"
            if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
              TARGET_REF="origin/$GITHUB_BASE_REF"
              git fetch origin "$GITHUB_BASE_REF" --depth=1
              MERGE_BASE=$(git merge-base HEAD "$TARGET_REF")
              echo "Pull Request: Diffing from merge base $MERGE_BASE to HEAD ($GITHUB_SHA)"
              CHANGED_RECIPES=$(git diff --name-only "$MERGE_BASE" HEAD -- '*/*.recipe' | sed 's|/[^/]*\.recipe$||g' | sort -u)
            else
              echo "Push/Manual Trigger: Diffing from $GIT_PRIMARY_BRANCH_REF to HEAD ($GITHUB_SHA)"
              CHANGED_RECIPES=$(git diff --name-only "$GIT_PRIMARY_BRANCH_REF...HEAD" -- '*/*.recipe' | sed 's|/[^/]*\.recipe$||g' | sort -u)
            fi
            echo "build_all_flag=false" >> $GITHUB_OUTPUT
          fi
          CHANGED_RECIPES=$(echo "$CHANGED_RECIPES" | sed '/^$/d')

          if [ -z "$CHANGED_RECIPES" ]; then
            echo "No recipes changed."
            echo "changed_recipes_json=[]" >> $GITHUB_OUTPUT
            echo "has_changed_recipes=false" >> $GITHUB_OUTPUT
          else
            echo "Changed recipes found:"
            echo "$CHANGED_RECIPES"
            CHANGED_RECIPES_JSON=$(echo "$CHANGED_RECIPES" | jq -R -s -c 'split("\n") | map(select(length > 0))')
            echo "changed_recipes_json=$CHANGED_RECIPES_JSON" >> $GITHUB_OUTPUT
            echo "has_changed_recipes=true" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Update Repository and Stage Dependency Infos
        id: generate-deps
        if: steps.detect-changes.outputs.has_changed_recipes == 'true'
        run: |
          echo "Updating HaikuPorter repository to generate/update all .DependencyInfo files..."
          # Dynamically find the unzipped license directory name relative to workspace
          LICENSES_DIR_NAME=$(ls -d ${{ github.workspace }}/haiku-licenses-*/ | head -n 1 | xargs basename)
          echo "Using licenses directory: $LICENSES_DIR_NAME at ${{ github.workspace }}/$LICENSES_DIR_NAME"

          haikuporter -q --config="${{ github.workspace }}/haikuports.conf"                     --licenses="${{ github.workspace }}/$LICENSES_DIR_NAME"                     --repository-update
          ls -R repository | wc -l
          echo "Repository updated. .DependencyInfo files generated for changed recipes."
        shell: bash

      - name: Save changed recipes list to a file for caching
        if: steps.detect-changes.outputs.has_changed_recipes == 'true'
        run: |
          echo '${{ steps.detect-changes.outputs.changed_recipes_json }}' > changed_recipes_list.json
          echo "Saved changed recipes JSON to changed_recipes_list.json for caching."
        shell: bash
        
      - name: Cache .DependencyInfo files and changed recipes list
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            repository/*.DependencyInfo
            changed_recipes_list.json
          key: ${{ runner.os }}-haiku-deps-${{ github.sha }}
